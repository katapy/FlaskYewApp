name: Create Archive

on: [push]

jobs:
  ui_build:
    defaults:
      run:
        working-directory: ui

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # selecting a toolchain either by action or manual `rustup` calls should happen
      # before the plugin, as it uses the current rustc version as its cache key
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: Swatinem/rust-cache@v1

      - name: Build ui
        run: |
          pwd
          ls -a
          rustup target add wasm32-unknown-unknown
          cargo install trunk
          trunk build --release --public-url flask_yew_app
          
      - name: Archive dist folder
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ui/dist

  create_static_folder:
    defaults:
      run:
        working-directory: server/app/static
    runs-on: ubuntu-latest
    needs: ui_build
    steps:
      - name: download dist
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: server/app/static/dist
      - run: |
          mkdir js
          pwd
          ls -Ra dist
          echo "import init from \"/static/dist/`ls -Ra dist | grep .js`\";" > js/index.js
          echo "await init(\"/static/dist/`ls -Ra dist | grep .wasm`\");" >> js/index.js
      - name: Archive js folder
        uses: actions/upload-artifact@v3
        with:
          name: js
          path: server/app/static/js
      - name: Archive js folder
        uses: actions/upload-artifact@v3
        with:
          name: js
          path: server/app/static/js

  docker_build_and_push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: ["server"]
    env:
      IMAGE_NAME: flask-yew-app
    needs: create_static_folder
    steps:
      - name: checkout
        uses: actions/checkout@v2
        
      - name: download dist
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: server/app/static/dist

      - name: download js
        uses: actions/download-artifact@v3
        with:
          name: js
          path: server/app/static/js

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - run: echo ${GITHUB_REF##*/}
      - run: echo "BRACH=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./${{ matrix.target }}
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.BRACH }} 
      